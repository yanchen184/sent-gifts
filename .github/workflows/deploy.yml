name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install
      env:
        CI: false

    - name: Build
      run: npm run build
      env:
        CI: false
        PUBLIC_URL: /sent-gifts

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        enable_jekyll: false
        cname: false

  enable-pages:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
    - name: Enable GitHub Pages
      uses: actions/github-script@v7
      with:
        script: |
          try {
            // Try to get existing Pages configuration
            const { data: pages } = await github.rest.repos.getPages({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            console.log('Pages already configured:', pages.html_url);
          } catch (error) {
            if (error.status === 404) {
              // Pages not configured, let's set it up
              try {
                await github.rest.repos.createPagesSite({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  source: {
                    branch: 'gh-pages',
                    path: '/'
                  }
                });
                console.log('GitHub Pages enabled successfully!');
              } catch (createError) {
                console.log('Error creating Pages site:', createError.message);
              }
            } else {
              console.log('Error checking Pages:', error.message);
            }
          }
